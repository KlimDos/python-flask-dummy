---
name: PR pre-checks
on:
  pull_request:
    types: [opened, reopened]
jobs:
  run-linters:
    name: Run linters
    runs-on: ubuntu-latest
    
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3.4.0

# Lint Branch Name
      - name: Check Branch Name
        id: check_branch
        run: |
          echo ${{ github.head_ref }}

          if [[ ${{ github.head_ref }} =~ ^[A-Z] ]];
          then
              # TODO instead of lowercase check we could check for naming convention pattern
              # echo -e "Branch name should start with lowercase: \n feature/...\n hotfix/...\n fix/..."

              echo -e "Branch name does not start with a lowercase letter."
              exit 1
          else
              echo "Branch naming check: passed"
              exit 0
          fi

      - name: Update PR Description
        if: ${{ failure() }}
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const prNumber = context.payload.pull_request.number
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
              body: "## ⚠️ Branch name does not start with a lowercase letter.\n\n"+
                    "To properly rename a branch in Git and sync changes with GitHub, you can follow these steps:\n\n"+
                    "1. Switch to the branch that you want to rename:\n"+
                    "```\n"+
                    "git checkout <old-branch-name>\n"+
                    "```\n\n"+
                    "2. Rename the branch using the -m option:\n"+
                    "```\n"+
                    "git branch -m <new-branch-name>\n"+
                    "```\n\n"+
                    "This will rename the local branch to the new name.\n\n"+
                    "3. Push the new branch to GitHub using the --force option:\n"+
                    "```\n"+
                    "git push --force origin <new-branch-name>\n"+
                    "```\n\n"+
                    "This will update the remote branch on GitHub with the new name.\n\n"+
                    "4. Delete the old branch on GitHub:\n"+
                    "```\n"+
                    "git push origin --delete <old-branch-name>\n"+
                    "```\n\n"+
                    "* This will delete the old branch from GitHub.\n\n"+
                    "5. (Optional) If you have local branches that track the old remote branch, update them to track the new remote branch:\n"+
                    "```\n"+
                    "git branch --set-upstream-to=origin/<new-branch-name> <new-branch-name>\n"+
                    "```\n\n"+
                    "* This will update the local branch to track the new remote branch.\n\n"+
                    "After these steps, the branch will be renamed both locally and on GitHub, and any local branches that track the old remote branch will be updated to track the new remote branch.\n\n"+
                    "Note that renaming a branch can cause problems for anyone else who has cloned the repository and has a local copy of the old branch. If this is the case, you should communicate with them to let them know about the branch rename and to make sure they update their local copy of the branch. ✨"
            })
# End Lint Branch Name ###

# Lint Terraform Code

      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@v3
        with:
          tflint_version: v0.44.1

      # TODO Add additional plugins https://github.com/terraform-linters/tflint-ruleset-aws

      - name: Show version
        run: tflint --version

      - name: Init TFLint
        run: tflint --init
        env:
          # https://github.com/terraform-linters/tflint/blob/master/docs/user-guide/plugins.md#avoiding-rate-limiting
          GITHUB_TOKEN: ${{ github.token }}

      - name: Run TFLint
        run: |
          tflint | tee lint-results.txt
          # base64 is used to save md formatting style 
          echo "::set-output name=lint_results::$(base64 -w 0 lint-results.txt)"

      - name: Update PR Description
        uses: actions/github-script@v6
        # if: always()
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const lintResults = Buffer.from('${{ steps.tflint.outputs.lint_results }}', 'base64').toString('utf-8');
            const prNumber = context.payload.pull_request.number   
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
              body: "## ⚠️ TFLint:\n\n"+ lintResults
            })
# End Lint Terraform Code ###

# Lint Pyton Code
#       - name: Get changed iles
#         id: changed_files
#         uses: jitterbit/get-changed-files@v1

#       - name: Set up Python
#         uses: actions/setup-python@v1
#         with:
#           python-version: 3.8

#       - name: Install Python dependencies
#         run: pip install pylint pylint-fail-under
        
        

#       - name: run pylint
#         run: |
#             echo ${{steps.changed_files.outputs.added_modified}}
#             for changed_file in ${{ steps.changed_files.outputs.added_modified }}; do
#               if [[ $changed_file =~ ".py" ]]; then
#                   pylint-fail-under --fail_under 7.0 ${changed_file}
#               fi
#             done

